package main

import "fmt"

// 整数しか扱えない
// データのばらつきかたの影響を受けない

/*
  170, 45, 75, 90, 2, 24, 802, 66
  1の位でソート
  170, 90, 2, 802, 24, 45, 75, 66
  10の位でソート
  2, 802, 24, 45, 66, 170, 75, 90
  100の位でソート
  2, 24, 45, 66, 75, 90, 170, 802

  1 => 10 => 100と増やしてもソート順が保持されるので、安定ソート
*/

// MEMO:
func Sort(a []int, limit int) {
	for l := 1; l <= limit; l *= 10 {
		x := make([]int, len(a))
		k := 0
		for d := 0; d <= 9; d++ {
			for i := 0; i < len(a); i++ {
				if (a[i]/l)%10 == d {
					x[k] = a[i]
					k++
				}
			}
		}
		for i := 0; i < len(a); i++ {
			a[i] = x[i]
		}
	}
}

func main() {
	A := []int{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 6, 5, 4, 3, 6, 5, 4, 3, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0}
	Sort(A, 100)
	fmt.Println(A)
}
