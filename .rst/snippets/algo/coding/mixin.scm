(p"
インスタンス変数 (属性) を継承するスーパークラスはひとつだけに限定して、
あとのスーパークラスはメソッド (実装) だけを継承するという方法があります。
この方法を Mix-in といいます。(といっても、mixin側で属性を持つ例もある)

継承には2つの異なる概念が含まれています。
一つは、「どのようなメソッドを持っているか」
あるいは「どのように振る舞うか」ということに着目した「仕様の継承」

通常の継承は単一継承に限る

2つめ以降の継承は、Mix-inと呼ばれる抽象クラスからに限定する

Mix-inクラスは以下のような特徴を備えた抽象クラスです。

* 単独でインスタンスを作らない

* 通常のクラスから継承しない

interfaceの実装も共有したい場合の手段

MIX-IN
抽象クラス
__init__を定義しない
メンバ変数を使わない

インスタンス変数 (属性) を継承するスーパークラスはひとつだけに限定して、あとのスーパークラスはメソッド (実装) だけを継承するという方法があります。この方法を Mix-in といいます。

インターフェイスを統一するだけなのがjavaで、各実装はクラス毎です。
bridgeして実装を共有する手立てはある。
")
