
====
path
====



end.scm
=======


.. code-block:: sh
   

    $ perl -E 'say 1
    __END__
    say2' 
    1
    



tmpdir.scm
==========



join.scm
========


.. code-block:: sh
   

    $ perl -M'File::Spec' -E 'say File::Spec->catfile(q#/path/to#, q#text.txt#)'
    /path/to/text.txt
    



glob.scm
========


.. code-block:: sh
   

    $ python -c 'import os; print("
    ".join(os.listdir(".")))'
      File "<string>", line 1
        import os; print("
                         ^
    SyntaxError: EOL while scanning string literal
    


.. code-block:: sh
   

    $ ghc -e 'System.Directory.getDirectoryContents "." >>= return . unlines >>= putStr'
    .
    ..
    set
    char
    op
    math
    index.sh
    bit
    tuple
    class
    regex
    number
    index.rst
    memory
    exception
    special_variables
    hash
    index.scm
    string
    range
    stack
    list
    .gitignore
    char-set
    cmd
    pointer
    io
    vector
    type
    date
    func
    path
    


.. code-block:: sh
   

    $ perl -E 'say for glob("*")'
    bit
    char
    char-set
    class
    cmd
    date
    exception
    func
    hash
    index.rst
    index.scm
    index.sh
    io
    list
    math
    memory
    number
    op
    path
    pointer
    range
    regex
    set
    special_variables
    stack
    string
    tuple
    type
    vector
    



normalize.scm
=============

Normalize path. I think return value is the same as a buff-stored value.

.. code-block:: sh
   

    $ ce 'char s[PATH_MAX]; p("%s", realpath("/home/../home/././.", s));' 
    /usr/home



basename.scm
============



basename
========



sep.scm
=======

