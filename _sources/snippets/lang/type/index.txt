
============
type
============

.. contents::
    :depth: 2



double.scm
==============================


.. code-block:: sh
   

    $ p("%f", (double)(1 << 30));
    Syntax error: "(" unexpected
    


.. code-block:: sh
   

    $ p("%lf", (double)(1UL << 52));
    Syntax error: "(" unexpected
    


.. code-block:: sh
   

    $ p("%lf", (double)(1UL << 63));
    Syntax error: "(" unexpected
    


.. code-block:: sh
   

    $ p("%f", (double)(1 << 50));
    Syntax error: "(" unexpected
    


.. code-block:: sh
   

    $ p("%lf", (double)(1 << 50));
    Syntax error: "(" unexpected
    


.. code-block:: sh
   

    $ p("%lf", (long)(1 << 40));
    Syntax error: "(" unexpected
    


.. code-block:: sh
   

    $ p("%lf", (double)(1 << 50));
    Syntax error: "(" unexpected
    

not 0.1 but 0.125?

.. code-block:: sh
   

    $ p("%lf", (double)((1UL << 49) + 0.1));
    Syntax error: "(" unexpected
    


.. warning::

    warn


.. code-block:: sh
   

    $ p("%lf", (double)(1UL << 64));
    Syntax error: "(" unexpected
    



index.scm
===========================



init.scm
========================


.. code-block:: sh
   

    $ ce 'char*a; __typeof(a) i = "abc"; ps(i);' 
    <stdin>:3:36: warning: implicit declaration of function 'ps' is invalid in C99 [-Wimplicit-function-declaration]
        char*a; __typeof(a) i = "abc"; ps(i);
                                       ^
    1 warning generated.
    /tmp/--gqpTBF.o: In function `main':
    -:(.text+0x311): undefined reference to `ps'
    clang: error: linker command failed with exit code 1 (use -v to see invocation)
    



limit.scm
===========================


.. code-block:: sh
   

    $ ce 'p("%lud", ULONG_MAX);' 
    18446744073709551615d


.. code-block:: sh
   

    $ ce 'p("%lu",sizeof(ULONG_MAX));' 
    8

8byte == 64bit(111..1) 2^63 + 2^62 + ... + 2^0 == 2^64 - 1

.. code-block:: sh
   

    $ ce 'p("%d", ULONG_MAX == (0UL - 1));' 
    1


.. code-block:: sh
   

    $ ce 'p("%d",SHRT_MIN);' 
    -32768



null.scm
========================

You need to inlcude stdio.h to use NULL.

.. code-block:: c
   

    
    int main () {
      printf("%p", NULL);
    }

.. code-block:: sh
   

    <stdin>:3:3: warning: implicitly declaring library function 'printf' with type 'int (const char *, ...)'
      printf("%p", NULL);
      ^
    <stdin>:3:3: note: please include the header <stdio.h> or explicitly provide a declaration for 'printf'
    <stdin>:3:16: error: use of undeclared identifier 'NULL'
      printf("%p", NULL);
                   ^
    1 warning and 1 error generated.
    

You need to inlcude stdio.h to use NULL.

.. code-block:: c
   

    #include <stdio.h>
    int main () {
      printf("%p", NULL);
    }

.. code-block:: sh
   

    0x0



sizeof.scm
==============================

with %zu print as unsigned decimal

.. code-block:: sh
   

    $ ce 'p("%zu", sizeof(char));' 
    1

with %zu print as unsigned decimal

.. code-block:: sh
   

    $ ce 'p("%zu", sizeof(short));' 
    2

with %zu print as unsigned decimal

.. code-block:: sh
   

    $ ce 'p("%zu", sizeof(short int));' 
    2

with %zu print as unsigned decimal

.. code-block:: sh
   

    $ ce 'p("%zu", sizeof(int));' 
    4

with %zu print as unsigned decimal

.. code-block:: sh
   

    $ ce 'p("%zu", sizeof(size_t));' 
    8

with %zu print as unsigned decimal

.. code-block:: sh
   

    $ ce 'p("%zu", sizeof(void*));' 
    8

with %zu print as unsigned decimal

.. code-block:: sh
   

    $ ce 'p("%zu", sizeof(long));' 
    8

with %zu print as unsigned decimal

.. code-block:: sh
   

    $ ce 'p("%zu", sizeof(float));' 
    4

with %zu print as unsigned decimal

.. code-block:: sh
   

    $ ce 'p("%zu", sizeof(double));' 
    8

with %zu print as unsigned decimal

.. code-block:: sh
   

    $ ce 'p("%zu", sizeof(long float));' 
    <stdin>:3:21: error: 'long float' is invalid
        p("%zu", sizeof(long float));
                        ^
    1 error generated.
    

with %zu print as unsigned decimal

.. code-block:: sh
   

    $ ce 'p("%zu", sizeof(long long));' 
    8

with %zu print as unsigned decimal

.. code-block:: sh
   

    $ ce 'p("%zu", sizeof(long double));' 
    16

with %zu print as unsigned decimal

.. code-block:: sh
   

    $ ce 'p("%zu", sizeof(double double));' 
    <stdin>:3:28: error: cannot combine with previous 'double' declaration specifier
        p("%zu", sizeof(double double));
                               ^
    1 error generated.
    

sizeof gets all the memory size, not the length of an array

.. code-block:: sh
   

    $ ce 'int b[10]; p("%zu", sizeof(b));' 
    40



toString.scm
====================================



RTTI (Run Time Type Identification)
---------------------------------------------------------------------------------------------------------


.. code-block:: sh
   

    $ cpe 'P(typeid(int).name());' 
    typeid(int).name() = i
    



type.scm
========================


.. code-block:: sh
   

    $ ee '(type-of 42)' 
    
    integer
    


.. code-block:: sh
   

    $ ee '(type-of 3.14)' 
    
    float
    


.. code-block:: sh
   

    $ ee '(type-of "foo")' 
    
    string
    


.. code-block:: sh
   

    $ ee '(type-of '\''(1 2))' 
    
    cons
    


.. code-block:: sh
   

    $ ee '(type-of '\''(1 2))' 
    
    cons
    


.. code-block:: sh
   

    $ ee '(type-of '\''foo)' 
    
    symbol
    


.. code-block:: sh
   

    $ ee '(type-of ?a)' 
    
    integer
    


.. code-block:: sh
   

    $ ee '(symbolp '\''foo)' 
    
    t
    


.. code-block:: sh
   

    $ ee '(symbol-name '\''foo)' 
    
    "foo"
    


.. code-block:: sh
   

    $ ee '(symbol-value '\''foo)' 
    Symbol's value as variable is void: foo
    

値セルに値があればt、なければnil

.. code-block:: sh
   

    $ ee '(boundp '\''foo)' 
    
    nil
    

関数セルに関数があればt、なければnil

.. code-block:: sh
   

    $ ee '(fboundp '\''foo)' 
    
    nil
    


.. code-block:: sh
   

    $ ee '(symbol-function '\''foo)' 
    
    nil
    

