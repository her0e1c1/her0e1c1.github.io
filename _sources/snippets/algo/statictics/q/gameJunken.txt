.. MATH: 少ないもの勝ちじゃんけんにて、じゃんけんを行う回数の期待値は？

少ないもの勝ちじゃんけんにて、じゃんけんを行う回数の期待値は？
==============================================================

E(N)をN人いるときの求めたい期待値とする。

Pijをi人からj人へと人数が移り変わる確率とすると
:math:`E(N) = \sum_{i=1}^{N}P_{N i}(E(i) + 1)` とおける

E(N)についてとくと、
:math:`E(N) = \frac{1 + \sum_{i=1}^{N-1}P_{N i}E(i)}{1-P_{N N}}` とおける

確率ではなく場合の数で置き換える(Pni=Qni/ALLを満たすQを導入)
:math:`E(N) = \frac{ALL + \sum_{i=1}^{N-1}Q_{N i}E(i)}{ALL-Q_{N N}}` とおける

これは、E(1)からE(N-1)までがわかれば、E(N)が求められることを示している
なお
:math:`\sum_{i=1}^{N}P_{N i}} = 1`
が成り立つ

Pijについては、f(R,S,P)の確率を求める。
R + S + P = Nとし、fはじゃんけんのおのおのの手が出た場合の確率を表す。

:math:`f(R,S,P) = \frac{{}_NC_R \cdot {}_(N-R)C_S}{3^N}` を計算すればよい

あるいは漸化式として
:math:`f(R,S,P) = \frac{f(R-1,S,P) + f(R,S-1,P) + f(R,S,P-1)}{3}` を計算すればよい

Pijを求めるがこれは、力ずくで求める？

(i, j) = (10, 2)のときは、f(5,3,2), f(4,4,2), f(8,1,1)?の結果を必要とする(条件を場合分けするのは面倒)

.. code-block:: c++

    int N;
    double memo[101];
    static const int N_=1020;
    static double C_[N_][N_];

    double dodo(int n) {

      if(n==1) return 0;
      double& ret=memo[n];
      if(ret>=0) return ret;
      int i,x,y;
      double tot=0,cnt=0,ng=0;

      // 1人目をグーで固定する.
      // npは、残りn-1人の出し方
      for(x=0;x<=n-1;x++) for(y=0;x+y<=n-1;y++) {
        // グー以外のパーとチョキについてもそれぞれnpであるので
        // 実際には、3*npで計算するのが正しい
        // ただし、確率なので3npもnpも結果は同じになる
        double np=C_[n-1][x]*C_[n-1-x][y];
        int V[3]={x+1,y,n-1-x-y};

      // こっちも可能(確率は同じだが、3倍くらい場合の数が増える)
      // for(x=0;x<=n;x++) for(y=0;x+y<=n;y++) {
      //  double np=C_[n][x]*C_[n-x][y];
      // int V[3]={x,y,n-x-y};

        sort(V,V+3);
        // 全員が同じ手 あるいは、 均等に同じ手 (あいこ)
        if(V[1]==0 || V[2]==V[0]) ng+=np;
        else {
          cnt+=np;
          // V[0] 3種類の手がでた
          // V[1] 2種類の手がでた
          tot+=np*dodo(V[0]?V[0]:V[1]);
        }
      }
      // cnt + ng = ALL
      return ret = (cnt+ng+tot)/cnt;
    }

    void solve() {
    int i,j,k,l,r,x,y; string s;

    FOR(i,N_) C_[i][0]=C_[i][i]=1;
    for(i=1;i<N_;i++) for(j=1;j<i;j++) C_[i][j]=(C_[i-1][j-1]+C_[i-1][j]);

    cin>>N;
    FOR(i,N+1) memo[i]=-1;
    _P("%.12lf\n",dodo(N));

    }
