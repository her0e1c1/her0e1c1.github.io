
=============================================
sorted-sequence
=============================================

.. contents::
    :depth: 2



common-range.scm
================================================



[(a_i, b_i)]における共通部分
------------------------------------------------------------


.. math::
    :nowrap:

    \begin{eqnarray}
        
    \\a_i \le b_i  \quad s.t. \quad 
    \\f(i, no) = \begin{cases}
    \\f(i, no+1) & (a_i > no)
    \\f(i, print(no)+1) & (a_i \le no < b_i)
    \\f(k, print(no)+1) & (\min_{b_i < b_k} k)
    \\\end{cases}
    \\
    \end{eqnarray}


.. code-block:: py
   

    a = [1, 4, 5, 9]
    b = [3, 6, 7, 9]
    lines="0 1 2 3 4 5 6 7 8 9 10".split()
    def f(i, no):
     if i == len(a):
      return
     if a[i] > no:
      f(i, no+1)
     elif a[i] <= no < b[i]:
      print(lines[no])
      f(i, no+1)
     else:
      print(lines[no])
      k = i+1
      while k < len(a):
       if b[i] < b[k]:
        break
       k += 1
      f(k, no+1)
    f(0, 0)

.. code-block:: sh
   

    1
    2
    3
    4
    5
    6
    7
    9
    



distinct.scm
====================================



重複を許した要素を持つ集合の区別できる要素の個数
------------------------------------------------------------------------

ソート配列に対して、現在の値nを保持しておく

.. math::
    :nowrap:

    \begin{eqnarray}
        
    \\f(i, n) = \begin{cases} 0 (i = 0)
    \\f(i-1, a_i) + 1 & (n = a_i)
    \\f(i-1, n) & (else)
    \\\end{cases}
    \\
    \end{eqnarray}



triangle-exists.scm
=========================================================

return true if a sorted array has a triangle

.. math::
    :nowrap:

    \begin{eqnarray}
        f(i) = 1 (a_i + a_{i+1} > a_{i+2})
    \end{eqnarray}



triple-product.scm
======================================================



配列の３つの積の最大値は?
---------------------------------------


.. math::
    :nowrap:

    \begin{eqnarray}
        \max_{i,j,k \in N} a[i] \times a[j] \times a[k]
    \end{eqnarray}


.. code-block:: gosh
   

    (print
        (let1 l (pa$ at (sort '(2 -2 1 5 -4 -3 6 2 -2 4)))
           (max (* (l -1) (l -2) (l -3))
                (* (l 0) (l 1) (l -1)))))

.. code-block:: sh
   

    120
    

