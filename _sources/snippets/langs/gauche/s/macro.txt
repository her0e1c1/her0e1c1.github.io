衛生的マクロ(hygienic macro)


define-syntax
=============


.. code-block:: sh
   

    $ gosh -e '(print (begin (define-syntax S (syntax-rules () ((_ a) (+ a 1)) ((_ a b) (+ a b)))) (S 2)))' -Eexit
    3
    


.. code-block:: sh
   

    $ gosh -e '(print (begin (define-syntax S (syntax-rules () ((_ a) (+ a 1)) ((_ a b) (+ a b)))) (S 10 20)))' -Eexit
    30
    

(literal ...)
HOGE becomes a keyword

.. code-block:: sh
   

    $ gosh -e '(print (begin (define-syntax S (syntax-rules (HOGE) ((_ a HOGE) (+ a 1)))) (S 10 HOGE)))' -Eexit
    11
    


.. code-block:: sh
   

    $ gosh -e '(print (begin (define-syntax S (syntax-rules (HOGE) ((_ a HOGE) (+ a 1)))) (S 10 H)))' -Eexit
    gosh: "error": Compile Error: malformed S: (S 10 H)
    "(input string port)":1:(print (begin (define-syntax S (synt ...
    
    



let-syntax
==========


.. code-block:: sh
   

    $ gosh -e '(print (begin (let ((f (lambda (x) (+ x 1)))) (let-syntax ((f (syntax-rules () ((_ x) x))) (g (syntax-rules () ((_ x) (f x))))) (list (f 1) (g 1))))))' -Eexit
    (1 2)
    


.. code-block:: sh
   

    $ gosh -e '(print (begin (let ((f (lambda (x) (+ x 1)))) (letrec-syntax ((f (syntax-rules () ((_ x) x))) (g (syntax-rules () ((_ x) (f x))))) (list (f 1) (g 1))))))' -Eexit
    (1 1)
    

