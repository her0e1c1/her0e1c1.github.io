
======
string
======

.. contents::
    :depth: 2



expand
======

|NAME|とすることで、文字をすぐ後ろへつなげる

.. code-block:: sh
   

    $ gosh -e '(print (begin (let1 name 123 (string-append "a test " (x->string name) "."))))' -Eexit
    a test 123.
    

reader macroの確認

.. code-block:: sh
   

    $ gosh -e '(print (begin (let1 name 123 '\''(string-append "a test " (x->string name) "."))))' -Eexit
    (string-append a test  (x->string name) .)
    


.. code-block:: sh
   

    $ gosh -e '(print (begin (string-append "" (x->string (+ 1 2 3)) "")))' -Eexit
    6
    


.. code-block:: sh
   

    $ gosh -e '(print (begin (string-every #\space "   ")))' -Eexit
    #t
    


.. code-block:: sh
   

    $ gosh -e '(print (begin (string-null? "")))' -Eexit
    #t
    



number notation
===============


.. code-block:: sh
   

    $ gosh -e '(print (begin 15))' -Eexit
    15
    


.. code-block:: sh
   

    $ gosh -e '(print (begin 511))' -Eexit
    511
    


.. code-block:: sh
   

    $ gosh -e '(print (begin 65535))' -Eexit
    65535
    

10 ^ 3  ; (expt 10 3)

.. code-block:: sh
   

    $ gosh -e '(print (begin 1000))' -Eexit
    1000
    



format
======

~%改行

.. code-block:: sh
   

    $ gosh -e '(print (begin (format #t "~D ~B ~O ~X~%" 256 256 256 256)))' -Eexit
    256 100000000 400 100
    #<undef>
    


.. code-block:: sh
   

    $ gosh -e '(print (begin (format #f "~b ~b" 105 100)))' -Eexit
    1101001 1100100
    


.. code-block:: sh
   

    $ gosh -e '(print (begin #\ሴ))' -Eexit
    ሴ
    


.. code-block:: sh
   

    $ gosh -e '(print (begin (make-string 5 #\ふ)))' -Eexit
    ふふふふふ
    


.. code-block:: sh
   

    $ gosh -e '(print (begin (substring "abc" 0 1)))' -Eexit
    a
    


.. warning::

    error


.. code-block:: sh
   

    $ gosh -e '(print (begin (substring "" 0 1)))' -Eexit
    gosh: "error": end argument out of range: 1
    
    



index
=====


.. code-block:: sh
   

    $ gosh -e '(print (begin (~ "abc" 0)))' -Eexit
    a
    



length
======


.. code-block:: sh
   

    $ gosh -e '(print (begin (string-length "あいうえお")))' -Eexit
    5
    


.. code-block:: sh
   

    $ gosh -e '(print (begin (string-length "test")))' -Eexit
    4
    


.. code-block:: sh
   

    $ gosh -e '(print (begin (string-trim-both " abc ")))' -Eexit
    abc
    



join
====


.. code-block:: sh
   

    $ gosh -e '(print (begin (string-join (list "a" "b" "c") "-")))' -Eexit
    a-b-c
    


.. code-block:: sh
   

    $ gosh -e '(print (begin (string-append "abc" "def")))' -Eexit
    abcdef
    



tr
==


.. code-block:: sh
   

    $ gosh -e '(print (begin (string-tr "ABC" "AB" "00")))' -Eexit
    00C
    



serialize
=========

オブジェクトを文字列にする

.. code-block:: sh
   

    $ gosh -e '(print (begin (write-to-string '\''(1 foo "abc"))))' -Eexit
    (1 foo "abc")
    


.. code-block:: sh
   

    $ gosh -e '(print (begin (read-from-string "(1 foo \"abc\")")))' -Eexit
    (1 foo abc)
    

