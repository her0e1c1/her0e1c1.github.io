
=====
array
=====

.. contents::
    :depth: 2


===========
declare.scm
===========



Declare
=======


.. code-block:: sh
   

    $ ce 'int a[10];'
    


.. code-block:: sh
   

    $ ce 'static int a[10];'
    


.. code-block:: sh
   

    $ ce 'int a[] = {1,2,3};'
    


.. code-block:: sh
   

    $ ce 'int a[] = {1,2,3}; int *b=a;'
    


.. warning::

    However you can't assign a vector to a pointer directly.


.. code-block:: sh
   

    $ ce 'int *a  = {1,2,3};'
    <stdin>:40:16: warning: incompatible integer to pointer conversion initializing 'int *' with an expression of type 'int' [-Wint-conversion]
        int *a  = {1,2,3};
                   ^
    <stdin>:40:18: warning: excess elements in scalar initializer
        int *a  = {1,2,3};
                     ^
    2 warnings generated.
    

Initialize a 2D array

.. code-block:: sh
   

    $ ce 'int a[10][10] = {10}; p("%d", a[0][0]);'
    10

Initialize a 2D array

.. code-block:: sh
   

    $ ce 'int a[10][10] = {{ 0 }}; p("%d", a[0][0]);'
    0

valc. so you can allocate memroy dynamically even if it is an array

.. code-block:: sh
   

    $ ce 'int k=10; int a[k];'
    

But with static, an error occurs

.. code-block:: sh
   

    $ ce 'int k=10;static int a[k];'
    <stdin>:40:25: error: variable length array declaration can not have 'static' storage duration
        int k=10;static int a[k];
                            ^ ~
    1 error generated.
    



Initialize
==========


.. code-block:: sh
   

    $ ce 'int i[30] = {0};'
    


.. code-block:: sh
   

    $ ce 'int i; for(int k=0; k<30; k++)i[k]=0;'
    <stdin>:40:36: error: subscripted value is not an array, pointer, or vector
        int i; for(int k=0; k<30; k++)i[k]=0;
                                      ~^~
    1 error generated.
    


.. code-block:: sh
   

    $ ce 'int i[30]; memset(i, 0, sizeof(i));'
    

