
=====
basic
=====

.. contents::
    :depth: 2



// .. // operator
=================


.. code-block:: sh
   

    echo "a
    b
    START
    c
    END
    e" |perl -nle 'print if /^START$/ .. /^END$/'
    START
    c
    END
    



diamond operator
================


.. code-block:: sh
   

    perl -e 'for(<*.txt>){$a=$_; s/.txt/.csv/; rename $a, $_}'
    


.. code-block:: sh
   

    ls |perl -E 'say reverse <>'perl -E 'say "sample.CsV" =~ /.*.csv/i'
    Bareword found where operator expected at -e line 1, near "<>perl"
    	(Missing operator before perl?)
    syntax error at -e line 2, near "<>perl
    "
    Execution of -e aborted due to compilation errors.
    



env
===


.. code-block:: sh
   

    perl -E 'say for split ":", $ENV{PATH}'
    /usr/local/heroku/bin
    /usr/local/heroku/bin
    /usr/local/heroku/bin
    /sbin
    /bin
    /usr/sbin
    /usr/bin
    /usr/games
    /usr/local/sbin
    /usr/local/bin
    /home/me/bin
    /home/me/.cask/bin
    /home/me/lib/
    /home/me/.cabal/bin
    /home/me/.cask/bin
    /home/me/lib/
    /home/me/.cabal/bin
    /home/me/.cask/bin
    /home/me/lib/
    /home/me/.cabal/bin
    



Don't use double quote which extend $ in sh or escape it
========================================================


.. code-block:: sh
   

    perl -e "$a=1; print $a"
    syntax error at -e line 1, near "="
    Execution of -e aborted due to compilation errors.
    


.. code-block:: sh
   

    perl -e "\$a=1; print \$a"
    1



escape quote in sh
==================


.. code-block:: sh
   

    perl -E 'say'\''HOGE HOGE'\'''
    HOGE HOGE
    



exec
====

execute shell command. you need -i option

.. code-block:: sh
   

    perl -e 'system qq#sh -ic "ll /lib/libc.so.*"#'
    -r--r--r--  1 root  wheel  1567216  1月 17  2014 /lib/libc.so.7
    

System and go last

.. code-block:: sh
   

    perl -E 'system "echo TEST" ;say "print"'
    TEST
    print
    

コマンドを実行し、失敗した場合にのみ制御が戻る

.. code-block:: sh
   

    perl -E 'exec "echo 1" ;say "NOT PRINTED"'
    1
    

when you want to execute other commands, then use system

.. code-block:: sh
   

    perl -E 'say `echo TEST`'
    TEST
    
    


.. code-block:: sh
   

    perl -e 'system "echo 1" for 1..3'
    1
    1
    1
    



false
=====


.. code-block:: sh
   

    perl -E 'say $a || "" || 0'
    0
    



filepath
========


.. code-block:: sh
   

    perl -E '$_="/home"; say if -d'
    /home
    



basename
========


.. code-block:: sh
   

    perl -M'File::Basename' -E 'say basename qq#/path/to/text.txt#'
    text.txt
    


.. code-block:: sh
   

    perl -M"File::Basename" -E 'say basename "/path/to/file.txt"'
    file.txt
    


.. code-block:: sh
   

    perl -M'File::Spec' -E 'say File::Spec->catfile(q#/path/to#, q#text.txt#)'
    /path/to/text.txt
    



function
========

引数が@_に格納されてるので、そのどれかを取り出す感じ

.. code-block:: sh
   

    perl -e 'sub {print $_[rand @_] for 1 .. 255}->("a" .. "z", 0 .. 9, "A" .. "Z")'
    19zWgbi53gV9zAbhz5VIdDvAARNDz1NcfhIj5NfBLAUMgExteuoBEr6uQqjeyBLQlTtvbVUzKr6ZdPEvokVPqtnpji5RuryQCRNXuFhli6eP57H8kRvV2HmV3k4lVTU501GSZj42HWp1IvcFpEDG0Cx8nTLwKWKB9HYtHIEPUB2WORxkzCuKxHsZoGGWe0sbKy5rvlk5Hq2zjHuNI2eNi0BcmnI8A4jNsvD4S6SuyZdHiYLzyDUDJqLs3ARbGXx


.. code-block:: sh
   

    perl -e 'sub {print "@_"}->("a" .. "z", 0 .. 9, "A" .. "Z")'
    a b c d e f g h i j k l m n o p q r s t u v w x y z 0 1 2 3 4 5 6 7 8 9 A B C D E F G H I J K L M N O P Q R S T U V W X Y Z



hello
=====


.. code-block:: sh
   

    perl -e 'print "hello world"'
    hello world


.. code-block:: sh
   

    perl -e 'print qq/hello world/'
    hello world


.. code-block:: sh
   

    perl -E 'say "hello world"'
    hello world
    



if
==


.. code-block:: sh
   

    perl -E 'say 1 ? "ok" : "no"'
    ok
    



sort
====


.. code-block:: sh
   

    $ perl -E '@a=qw(abc b a z);say sort(@arr);'
    
    


.. warning::

    sort関数は、2と11の場合、11が先になる


.. code-block:: sh
   

    $ perl -E '@a=qw(11 10 1 2);say for sort @a'
    1
    10
    11
    2
    


.. code-block:: sh
   

    $ perl -E '@a=qw(11 10 1 2); @b=sort{$a<=>$b}@a; say qq/@b/'
    1 2 10 11
    



number
======


.. code-block:: sh
   

    perl -E 'say 0b1000'
    8
    



options
=======

With -0 option delimiter is NULL
With -0777 you can't use any option delimiter.

.. code-block:: sh
   

    echo "a
    a
    a"|perl -p0777E 's/a/b/'
    b
    a
    a
    



Display warning
===============


.. code-block:: sh
   

    perl -we 'print @a'
    Name "main::a" used only once: possible typo at -e line 1.
    



F option
========


.. code-block:: sh
   

    echo "123456	b
    c	d" | perl -aF'	' -nlE 'say join(", ", map(sprintf("%5s", substr($_, 0, 5)), @F))'
    Unrecognized switch: -	  (-h will show valid options).
    


.. code-block:: sh
   

    ps aux | perl -anle 'print $F[1]' | head -n2
    PID
    22475
    

print 0 ~ 4 columns in the argument file

.. code-block:: sh
   

    echo "a,b
    c,d" |perl -F'/,s*/' -alnE 'say join "/", @F'
    a/b
    c/d
    



-00
===


.. code-block:: sh
   

    echo "a
    b
    
    c
    d"|perl -00 -pE 'say "-" x 20'
    --------------------
    a
    b
    
    --------------------
    c
    d
    



random
======


.. code-block:: sh
   

    $ perl -E 'rand(10)'
    


.. code-block:: sh
   

    $ perl -E 'int(rand(10))'
    


.. code-block:: sh
   

    perl -E 'say rand for 1..5'
    0.00883335511116812
    0.392844935038255
    0.269706959874508
    0.981896142798128
    0.127705741802021
    



special characters
==================

$"
This is a "@array" delimiter

.. code-block:: sh
   

    perl -E '$" = " - "; @a=1..5; say "@a"'
    1 - 2 - 3 - 4 - 5
    

変数が未定義であることを確認

.. code-block:: sh
   

    perl -E 'say "undefined" if !defined($a)'
    undefined
    

未定義の場合に代入

.. code-block:: sh
   

    perl -E '$a//=1; say $a'
    1
    

