
======
string
======

.. contents::
    :depth: 2



glob
====


.. code-block:: sh
   

    perl -E 'say join " ", glob("{a,b,c}.{txt,csv}")'
    a.txt a.csv b.txt b.csv c.txt c.csv
    


.. code-block:: sh
   

    perl -E 'for $i (qw/a b c/){for(qw/txt csv/){`echo $i.$_`}}'
    



string
======


.. code-block:: sh
   

    perl -E 'say "abc"."efg"'
    abcefg
    


.. code-block:: sh
   

    perl -E 'say 1 if "a" eq "a"'
    1
    


.. code-block:: sh
   

    perl -E 'say sprintf("%s, %s", "hello", "world")'
    hello, world
    


.. code-block:: sh
   

    perl -E 'say join " ", 1..10'
    1 2 3 4 5 6 7 8 9 10
    


.. code-block:: sh
   

    perl -E 'say split /s/, "a b c"'
    a b c
    


.. code-block:: sh
   

    perl -e 'print qq/hello world/'
    hello world


.. code-block:: sh
   

    perl -E 'say ord("a")'
    97
    


.. code-block:: sh
   

    perl -E 'say substr + (join "", a..f), 1, -1'
    bcde
    

perlの場合文字列を+で評価すると型を数値とする
なお、文字列の結合は.を使うので注意
また、数値でないものは0として扱われる

.. code-block:: sh
   

    perl -E 'say "1" + "2"'
    3
    


.. code-block:: sh
   

    perl -E 'say "a1a" + "2"'
    2
    


.. code-block:: sh
   

    perl -E 'say "abc" x 3'
    abcabcabc
    



length
======


.. code-block:: sh
   

    perl -E 'say length shift' 1234567890
    10
    



join
====


.. code-block:: sh
   

    perl -E 'say join " " , map {sprintf "%03d", $_} 1..10'
    001 002 003 004 005 006 007 008 009 010
    



split
=====


.. code-block:: sh
   

    perl -E '@a=(split " ", "a b c d e")[2..4]; say @a'
    cde
    


.. code-block:: sh
   

    perl -E '@a=(split " ", "a b c d e")[-1]; say @a'
    e
    


.. code-block:: sh
   

    perl -E '@a=(split " ", "a b c d e")[-1, 0]; say @a'
    ea
    

d option
delete it if you cant map a char

.. code-block:: sh
   

    perl -E '$_=qq/abc/; tr/ac/A/d; say'
    Ab
    



unpack
======


.. code-block:: sh
   

    perl -le 'print unpack("H*", $ARGV[0]);' 'あいうえお' 
    e38182e38184e38186e38188e3818a
    


.. code-block:: sh
   

    perl -E 'say unpack("B*", "A");'
    01000001
    

